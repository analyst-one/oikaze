@use 'sass:meta';

@use './theme/colors.scss' as color;
@use './theme/sizes.scss' as size;

@use '../' as t with (
  $theme: (
    color: meta.module-variables(color),
    size: meta.module-variables(size),
  )
);

:root {
  @include t.spread-variables();
}

.test {
  color: map-get(t.$theme, 'color', 'primary'); // `#93b733` (not safe)

  color: color.$primary; // #93b733
  color: t.get('$color.primary'); // #93b733
  color: t.get('color.primary'); // var(--color-primary, #93b733)

  color: rgba(color.$primary, 0.2); // rgba(147, 183, 51, 0.2)
  color: t.with-opacity(
    'color.primary',
    0.2
  ); // rgba(var(--color-primary--rgb, 147,183,51), 0.2)
  color: t.with-opacity('$color.primary', 0.2); // rgba(147, 183, 51, 0.2)

  font-size: size.$regular; // 16px
  font-size: t.get('size.regular'); // var(--size-regular, 16px)
  font-size: t.get('$size.regular'); // 16px

  font-size: t.rem(
    'size.small'
  ); // calc(var(--size-small, 8px) / var(--size-base, 16px) * 1rem)
  font-size: t.rem('$size.small'); // 0.5rem
}
